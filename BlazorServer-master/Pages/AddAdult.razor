@page "/AddAdult"
@using System.Data
@using BlazorServer.Models
@using BlazorServer.Persistence
@inject IFileAdapter Adapter;
@inject NavigationManager NavigationManager

<h3>Add Adult Here</h3>

<EditForm Model="@_adult" OnValidSubmit="@AddAdultAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div style="color:red">@errorMessage</div>
    <div class="form-group">
        First name:
        <InputText type="text" @bind-Value="_adult.FirstName"/>
    </div>
    <div class="form-group">
        Last name:
        <InputText type="text" @bind-Value="_adult.LastName"/>
    </div>
    <div class="form-group">
        <p>
            Sex:<select class="form-control selectpicker" style="width: 75px" @bind="_adult.Sex">
                <option>M</option>
                <option>F</option>
            </select>
        </p>
    </div>
    <div class="form-group">
        Age: 
        <InputNumber @bind-Value="_adult.Age"/>
    </div>
    <div class="form-group">
        Job Title:
        <InputText type="text" @bind-Value="jobTitle"/>
    </div>
    <div class="form-group">
        Salary: 
        <InputNumber @bind-Value="salary"/>
    </div>
    <div class="form-group">
        Height: 
        <InputNumber @bind-Value="_adult.Height"/>
    </div>
    <div class="form-group">
        Weight: 
        <InputNumber @bind-Value="_adult.Weight"/>
    </div>
    <div class="form-group">
        Hair Color:
        <InputText type="text" @bind-Value="_adult.HairColor"/>
    </div>
    <div class="form-group">
        <p>
            Eye Color:<select class="form-control selectpicker" style="width: 150px" @bind="_adult.EyeColor">
                <option>Brown</option>
                <option>Blue</option>
                <option>Amber</option>
                <option>Gray</option>
                <option>Green</option>
                <option>Other</option>
            </select>
        </p>
    </div>
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Create</button>
    </p>
</EditForm>

@code 
{
    private Adult _adult = new Adult();
    private string jobTitle;
    private int salary;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        _adult.Sex = "M";
        _adult.EyeColor = "Brown";
    }

    private async Task AddAdultAsync()
    {
       /* _adult.JobTitle = new Job
                   {
                       JobTitle = jobTitle,
                       Salary = salary
                   };*/
        await Adapter.AddAdultAsync(_adult);
        NavigationManager.NavigateTo("/Adults"); 
        }
}